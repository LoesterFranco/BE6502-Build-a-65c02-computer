
SB-Cross Assembler version 3.03.06
Please visit www.sbprojects.net for a complete description.

Assembling....

Pass one
Loaded 65c02 overlay version 3.01.02

Pass two
0000-                  1       * ---------------------------------------------------------
0000-                  2       * READ SWITCHES AND OUTPUT READ VALUES TO LEDS.
0000-                  3
0000-                  4               .CR     65C02
0000-                  5               .TF     echo.hex,INT
8000-                  6               .OR     $8000
8000-                  7               .TA     $0000
8000-                  8
6000-                  9       ORB     .EQ     $6000           VIA PORT B DATA
6001-                 10       ORA     .EQ     $6001           VIA PORT A DATA
6001-                 11       IRA     .EQ     $6001           VIA PORT A DATA (SAME AS OUTPUT)
6002-                 12       DDRB    .EQ     $6002           VIA DDRB
6003-                 13       DDRA    .EQ     $6003           VIA DDRA
8000-                 14
8000-                 15       * ---------------------------------------------------------
8000-                 16       * SUB-ROUTINES
8000-A9 FF            17 (  2) INITVIA LDA     #%11111111      PORT B. DATA SIGNALS USED WITH
8002-8D 02 60         18 (  4)         STA     DDRB            LCD DISPLAY ONLY, ALSO LEDs.
8005-A9 E0            19 (  2)         LDA     #%11100000      PORT A. PA0-PA4 INPUT FOR SWITCHES,
8007-8D 03 60         20 (  4)         STA     DDRA            PA5-PA7 USED FOR LCD CONTROL SIGNALS.
800A-60               21 (  6)         RTS
800B-                 22
800B-                 23
800B-                 24       * ---------------------------------------------------------
800B-                 25       * MAIN PROGRAM STARTS HERE
800B-20 00 80         26 (  6) START   JSR     INITVIA         INITIALIZE VIA
800E-AD 01 60         27 (  4) ECHO    LDA     IRA             READ SWITCHES
8011-29 1F            28 (  2)         AND     #%00011111      MASK OUT OTHER BITS
8013-8D 00 60         29 (  4)         STA     ORB             OUTPUT TO LEDS
8016-4C 0E 80         30 (  3)         JMP     ECHO            DO IT FOREVER
8019-                 31
8019-                 32       * ---------------------------------------------------------
8019-                 33       * STORE VECTORS AT END OF EPROM.
FFFA-                 34               .OR     $FFFA
FFFA-                 35               .TA     $7FFA
FFFA-0B 80            36               .DA     START           NMI VECTOR
FFFC-0B 80            37               .DA     START           RESET VECTOR
FFFE-0B 80            38               .DA     START           IRQ VECTOR

0 Errors found during assembly.
0 Warnings found during assembly.

