
SB-Cross Assembler version 3.03.06
Please visit www.sbprojects.net for a complete description.

Assembling....

Pass one
Loaded 65c02 overlay version 3.01.02

Pass two
0000-                  1       * ---------------------------------------------------------
0000-                  2       * INITIALIZE LCD DISPLAY AND OUTPUT SOME DATA TO IT
0000-                  3
0000-                  4
0000-                  5               .CR     65C02
0000-                  6               .TF     hello_lcd.hex,INT
0000-                  7
8000-                  8               .OR     $8000
8000-                  9               .TA     $0000
8000-                 10
6000-                 11       ORB     .EQ     $6000           VIA Port B data
6001-                 12       ORA     .EQ     $6001           VIA Port A data
6002-                 13       DDRB    .EQ     $6002           VIA DDRB
6003-                 14       DDRA    .EQ     $6003           VIA DDRA
8000-                 15
8000-A9 FF            16 (  2) INITVIA LDA     #%11111111
8002-8D 02 60         17 (  4)         STA     DDRB
8005-A9 E0            18 (  2)         LDA     #%11100000
8007-8D 03 60         19 (  4)         STA     DDRA
800A-60               20 (  6)         RTS
800B-                 21
800B-A9 30            22 (  2) INITLCD LDA     #%00110000      FUNCTION SET (INITIALIZE)
800D-20 41 80         23 (  6)         JSR     LCD_CMD
8010-20 67 80         24 (  6)         JSR     WAITLCD
8013-                 25
8013-A9 30            26 (  2)         LDA     #%00110000
8015-20 41 80         27 (  6)         JSR     LCD_CMD
8018-20 67 80         28 (  6)         JSR     WAITLCD
801B-                 29
801B-A9 30            30 (  2)         LDA     #%00110000
801D-20 41 80         31 (  6)         JSR     LCD_CMD
8020-20 67 80         32 (  6)         JSR     WAITLCD
8023-                 33
8023-A9 38            34 (  2)         LDA     #%00111000      FUNCTION SET (8-BIT TRANSFER)
8025-20 41 80         35 (  6)         JSR     LCD_CMD
8028-20 67 80         36 (  6)         JSR     WAITLCD
802B-                 37
802B-A9 0F            38 (  2)         LDA     #%00001111      DISPLAY ON, CURSOR EN.
802D-20 41 80         39 (  6)         JSR     LCD_CMD
8030-20 67 80         40 (  6)         JSR     WAITLCD
8033-                 41
8033-A9 01            42 (  2)         LDA     #%00000001      CLEAR DISPLAY
8035-20 41 80         43 (  6)         JSR     LCD_CMD
8038-20 67 80         44 (  6)         JSR     WAITLCD
803B-                 45
803B-A9 06            46 (  2)         LDA     #%00000110      SET ENTRY MODE
803D-20 41 80         47 (  6)         JSR     LCD_CMD
8040-60               48 (  6)         RTS
8041-                 49
8041-8D 00 60         50 (  4) LCD_CMD STA     ORB             DATA IS IN ACCUMULATOR
8044-A9 80            51 (  2)         LDA     #%10000000      E=H R/W=L RS=L
8046-8D 01 60         52 (  4)         STA     ORA
8049-A9 00            53 (  2)         LDA     #%00000000      E=L PULSE CLOCK LOW
804B-8D 01 60         54 (  4)         STA     ORA
804E-A9 80            55 (  2)         LDA     #%10000000      E=H
8050-8D 01 60         56 (  4)         STA     ORA
8053-60               57 (  6)         RTS
8054-                 58
8054-8D 00 60         59 (  4) LCD_CHR STA     ORB             DATA IS IN ACCUMULATOR
8057-A9 A0            60 (  2)         LDA     #%10100000      E=H R/W=L RS=H
8059-8D 01 60         61 (  4)         STA     ORA
805C-A9 20            62 (  2)         LDA     #%00100000      E=L PULSE CLOCK LOW
805E-8D 01 60         63 (  4)         STA     ORA
8061-A9 A4            64 (  2)         LDA     #%10100100      E=H
8063-8D 01 60         65 (  4)         STA     ORA
8066-60               66 (  6)         RTS
8067-                 67
8067-EA               68 (  2) WAITLCD NOP                     PLACEHOLDER
8068-60               69 (  6)         RTS
8069-                 70
8069-20 00 80         71 (  6) START   JSR     INITVIA         INITIALIZE VIA
806C-20 0B 80         72 (  6)         JSR     INITLCD         INITIALIZE LCD
806F-                 73
806F-A9 48            74 (  2)         LDA     #%01001000          H
8071-20 54 80         75 (  6)         JSR         LCD_CHR
8074-                 76
8074-A9 69            77 (  2)         LDA     #%01101001          i
8076-20 54 80         78 (  6)         JSR     LCD_CHR
8079-EA               79 (  2) LOOP    NOP
807A-4C 79 80         80 (  3)         JMP     LOOP
807D-                 81
807D-                 82       * ---------------------------------------------------------
807D-                 83       * STORE VECTORS AT END OF EPROM.
FFFA-                 84               .OR     $FFFA
FFFA-                 85               .TA     $7FFA
FFFA-69 80            86               .DA     START   NMI VECTOR
FFFC-69 80            87               .DA     START   RESET VECTOR
FFFE-69 80            88               .DA     START   IRQ VECTOR

0 Errors found during assembly.
0 Warnings found during assembly.

